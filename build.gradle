buildscript {
    repositories {
        mavenLocal()
        maven {
            name "aliyunmaven"
            url "https://maven.aliyun.com/repository/central/"
        }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.31"
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.3.21"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
        classpath 'se.transmode.gradle:gradle-docker:1.2'
        classpath "io.franzbecker:gradle-lombok:3.1.0"
        classpath 'com.google.gradle:osdetector-gradle-plugin:1.6.0'
    }
}

subprojects {
    apply plugin: 'idea'
    apply plugin: 'java'

    sourceCompatibility = '1.8'

    apply plugin: 'docker'
    docker {
        baseImage 'daocloud.io/java:8'
        maintainer 'tanwenhai tanwenhai@outlook.com'
    }

    task buildDocker(type: Docker, dependsOn: build) {
        applicationName = jar.archiveBaseName.get()
        tagVersion = jar.version
        volume('/tmp')
        addFile("${applicationName}-*.jar", "app.jar")
        entryPoint(["bash", "app.jar"])
        exposePort(8080)
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }

    repositories {
        maven {
            name "aliyunmaven"
            url "https://maven.aliyun.com/repository/central/"
        }
        mavenLocal()
    }
}


project(":commons") {
    apply plugin: "io.franzbecker.gradle-lombok"
    apply plugin: 'com.google.osdetector'

    dependencies {
        // https://mvnrepository.com/artifact/org.apache.zookeeper/zookeeper
        compile ('org.apache.zookeeper:zookeeper:3.4.13') {
            exclude group: 'org.slf4j'
            exclude group: 'log4j'
        }
        // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-core
        compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.9.8'
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-annotations
        compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.9.8'
        // https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind
        compileOnly group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.8'
        compile group: 'io.netty', name: 'netty-all', version: '4.1.34.Final'
        // https://mvnrepository.com/artifact/redis.clients/jedis
        compile group: 'redis.clients', name: 'jedis', version: '3.1.0-m1'


        if (osdetector.classifier.indexOf('linux') != -1) {
            // https://mvnrepository.com/artifact/io.netty/netty-transport-native-epoll
            compile group: 'io.netty', name: 'netty-transport-native-epoll', version: '4.1.34.Final', classifier: osdetector.classifier
        }

        // https://mvnrepository.com/artifact/com.google.guava/guava
        compile group: 'com.google.guava', name: 'guava', version: '27.1-jre'

        compileOnly 'org.projectlombok:lombok:1.18.8'
        testCompile group: 'junit', name: 'junit', version: '4.12'

    }
}

project(":game-core") {
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    group 'com.twh'
    version '1.0-SNAPSHOT'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    dependencies {
        compile 'org.springframework.boot:spring-boot-starter:2.1.3.RELEASE'
        compile 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        compile 'org.jetbrains.kotlin:kotlin-reflect'
        compile project(":commons")
        // https://mvnrepository.com/artifact/io.vertx/vertx-core
        compile ('io.vertx:vertx-core:3.7.0') {
            exclude group: 'io.netty'
        }
        compileOnly "org.springframework.boot:spring-boot-configuration-processor:2.1.3.RELEASE"
        testCompile group: 'junit', name: 'junit', version: '4.12'
        testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.3.RELEASE'
    }

}

project(":game-gate") {
    apply plugin: 'kotlin'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'io.spring.dependency-management'

    group 'com.twh'
    version '1.0-SNAPSHOT'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    repositories {
        maven {
            name "aliyunmaven"
            url "https://maven.aliyun.com/repository/central/"
        }
        mavenLocal()
    }

    bootJar {
        launchScript()
    }

    dependencies {
        implementation project(":game-core")
    }
}

project(":game-room") {
    apply plugin: 'kotlin'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'docker'

    group 'com.twh'
    version '1.0-SNAPSHOT'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    repositories {
        maven {
            name "aliyunmaven"
            url "https://maven.aliyun.com/repository/central/"
        }
        mavenLocal()
    }

    bootJar {
        launchScript()
    }

    dependencies {
        implementation project(":game-core")
    }
}

project(":game-match") {
    apply plugin: 'kotlin'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'docker'

    group 'com.twh'
    version '1.0-SNAPSHOT'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    repositories {
        maven {
            name "aliyunmaven"
            url "https://maven.aliyun.com/repository/central/"
        }
        mavenLocal()
    }

    bootJar {
        launchScript()
    }

    dependencies {
        implementation project(":game-core")
    }
}

project(":net-client") {
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'org.jetbrains.kotlin.plugin.spring'

    group 'com.twh'
    version '1.0-SNAPSHOT'

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    repositories {
        maven {
            name "aliyunmaven"
            url "https://maven.aliyun.com/repository/central/"
        }
        mavenLocal()
    }

    dependencies {
        implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
        implementation 'org.jetbrains.kotlin:kotlin-reflect'
        implementation ('io.vertx:vertx-core:3.7.0') {
            exclude group: 'io.netty'
        }
        implementation "io.vertx:vertx-lang-kotlin:3.7.0"
        // https://mvnrepository.com/artifact/io.vertx/vertx-ext
        compile group: 'io.vertx', name: 'vertx-ext', version: '34', ext: 'pom'

        compile project(":commons")
    }

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ['-Xjsr305=strict']
            jvmTarget = '1.8'
        }
    }
}